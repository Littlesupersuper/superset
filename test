import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;

import java.util.LinkedHashMap;
import java.util.Map;
import java.util.stream.Stream;

public class StreamQueryExample {

    private final JdbcTemplate jdbcTemplate;
    private final ObjectMapper objectMapper;

    public StreamQueryExample(JdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
        this.objectMapper = new ObjectMapper(); // 初始化 Jackson 的 ObjectMapper
    }

    public void streamQuery(String sql) {
        try (Stream<String> stream = jdbcTemplate.queryForStream(sql, rowMapper())) {
            stream.forEach(System.out::println); // 输出 JSON 格式字符串
        }
    }

    private RowMapper<String> rowMapper() {
        return (rs, rowNum) -> {
            try {
                // 将 ResultSet 当前行转换为 Map
                int columnCount = rs.getMetaData().getColumnCount();
                Map<String, Object> rowMap = new LinkedHashMap<>();
                for (int i = 1; i <= columnCount; i++) {
                    String columnName = rs.getMetaData().getColumnName(i);
                    Object columnValue = rs.getObject(i);
                    rowMap.put(columnName, columnValue);
                }
                // 使用 ObjectMapper 转换为 JSON
                return objectMapper.writeValueAsString(rowMap);
            } catch (Exception e) {
                throw new RuntimeException("Error converting ResultSet to JSON", e);
            }
        };
    }
}